@using BeatThePokemon.Models.ViewModels
@using Type = System.Type
@model BeatThePokemon.Models.ViewModels.PokemonCreateViewModel;
@{
    ViewData["Title"] = "CreatePokemon";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <script>
        $(function () {
            function log(message) {
                $("#log").val(message);
            }

            $('#aanvallen').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("Aanvallen","Pokemon")",
                        type: "POST",
                        dataType: 'json',
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                minlength: 1,
                select: function (event, ui) {
                    log(ui.item.value);
                }
            });
        });
    </script>
</head>

<body>
    <form class="container" accept-charset="UTF-8" role="form" enctype="multipart/form-data" method="post">
        <h1>Create Pokemon</h1>

        <div class="row">
            <div class="col-2">
                <label>Naam:</label>
                <input asp-for="Naam" class="form-control" type="text">
                <span asp-validation-for="Naam" class="text-danger"></span>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-3">
                <label>Type:</label>
                <div class="btn-group-toggle" data-toggle="buttons">
                    @foreach (SoortViewModel soort in Model.AlleSoorten)
                    {
                        <label class="btn">
                            <div class="SoortButton" data-type="@Convert.ToInt32(soort.Naam)" style="background-image: url(../images/@soort.ImageNaam" )></div>
                        </label>
                    }
                </div>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                <label asp-for="Image"></label>
                @Html.EditorFor(model => model.Image)
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
        </div>
        <br />
        @if (@Model.Type == 0)
        {
            <input type="hidden" asp-for="Type" id="TypeText" value="" />
        }
        else
        {
            <input type="hidden" asp-for="Type" id="TypeText" />
        }

        <div class="row">
            <div class="col-md-4">
                <div class="ui-widget">
                    <label for="aanvallen">Aanvallen: </label>
                    <input id="aanvallen" />
                </div>

                <div class="ui-widget">
                    <input asp-for="NaamAanval" id="log" type="hidden" class="ui-widget-content" />
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <input type="submit" value="Create" />
        </div>
    </form>
</body>

